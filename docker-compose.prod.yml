version: "3.8"

services:
  # Backend service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    container_name: quran-id-backend-prod
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=production
      - QURAN_PORT=4000
      - QURAN_CLIENT_ID=${QURAN_CLIENT_ID}
      - QURAN_CLIENT_SECRET=${QURAN_CLIENT_SECRET}
      - QURAN_ENDPOINT=${QURAN_ENDPOINT:-https://apis-prelive.quran.foundation/content/api/v4}
      - QURAN_TOKEN_ENDPOINT=${QURAN_TOKEN_ENDPOINT:-https://prelive-oauth2.quran.foundation/oauth2/token}
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "node",
          "-e",
          "require('http').get('http://localhost:4000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - quran-network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: "0.5"
        reservations:
          memory: 256M
          cpus: "0.25"

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
    container_name: quran-id-frontend-prod
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://backend:4000
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "node",
          "-e",
          "require('http').get('http://localhost:3000', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - quran-network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: "0.5"
        reservations:
          memory: 256M
          cpus: "0.25"

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: quran-id-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - quran-network
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: "0.25"

# Custom network for service communication
networks:
  quran-network:
    driver: bridge
